name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: First beef
        run: |
          echo "{}" > package.json
          npm i --no-save express socket.io
          ip address 
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: current
          cache: npm

      - name: Install
        run: |
          echo "{}" > package.json
          npm i express socket.io
          ip address 
          node --input-type module <<HEREDOC
            //import fs from "fs";
            const express = await import('node:express');
            const app = express();
            const http = await import('node:http');
            const server = http.createServer(app);
            const { Server } = await import("socket.io");
            const io = new Server(server);

            app.get('/', (req, res) => {
              res.sendFile(__dirname + '/index.html');
            });

            io.on('connection', (socket) => {
              console.log('a user connected');
            });

            server.listen(3000, () => {
              console.log('listening on *:3000');
            });
          HEREDOC
          ip address 
